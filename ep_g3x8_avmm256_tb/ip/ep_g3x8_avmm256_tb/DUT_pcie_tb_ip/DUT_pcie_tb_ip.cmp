	component DUT_pcie_tb_ip is
		generic (
			lane_mask_hwtcl                      : string  := "x4";
			pll_refclk_freq_hwtcl                : string  := "100 MHz";
			serial_sim_hwtcl                     : integer := 1;
			deemphasis_enable_hwtcl              : string  := "false";
			pld_clk_MHz                          : integer := 125;
			millisecond_cycle_count_hwtcl        : integer := 124250;
			use_crc_forwarding_hwtcl             : integer := 0;
			ecrc_check_capable_hwtcl             : integer := 0;
			ecrc_gen_capable_hwtcl               : integer := 0;
			bfm_drive_interface_clk_hwtcl        : integer := 1;
			bfm_drive_interface_npor_hwtcl       : integer := 1;
			bfm_drive_interface_pipe_hwtcl       : integer := 1;
			bfm_drive_interface_control_hwtcl    : integer := 1;
			enable_pipe32_phyip_ser_driver_hwtcl : integer := 0
		);
		port (
			test_in          : out std_logic_vector(31 downto 0);                    -- test_in
			simu_mode_pipe   : out std_logic;                                        -- simu_mode_pipe
			sim_pipe_pclk_in : out std_logic;                                        -- sim_pipe_pclk_in
			sim_pipe_rate    : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- sim_pipe_rate
			sim_ltssmstate   : in  std_logic_vector(4 downto 0)  := (others => 'X'); -- sim_ltssmstate
			eidleinfersel0   : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- eidleinfersel0
			eidleinfersel1   : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- eidleinfersel1
			eidleinfersel2   : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- eidleinfersel2
			eidleinfersel3   : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- eidleinfersel3
			eidleinfersel4   : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- eidleinfersel4
			eidleinfersel5   : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- eidleinfersel5
			eidleinfersel6   : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- eidleinfersel6
			eidleinfersel7   : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- eidleinfersel7
			powerdown0       : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- powerdown0
			powerdown1       : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- powerdown1
			powerdown2       : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- powerdown2
			powerdown3       : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- powerdown3
			powerdown4       : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- powerdown4
			powerdown5       : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- powerdown5
			powerdown6       : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- powerdown6
			powerdown7       : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- powerdown7
			rxpolarity0      : in  std_logic                     := 'X';             -- rxpolarity0
			rxpolarity1      : in  std_logic                     := 'X';             -- rxpolarity1
			rxpolarity2      : in  std_logic                     := 'X';             -- rxpolarity2
			rxpolarity3      : in  std_logic                     := 'X';             -- rxpolarity3
			rxpolarity4      : in  std_logic                     := 'X';             -- rxpolarity4
			rxpolarity5      : in  std_logic                     := 'X';             -- rxpolarity5
			rxpolarity6      : in  std_logic                     := 'X';             -- rxpolarity6
			rxpolarity7      : in  std_logic                     := 'X';             -- rxpolarity7
			txcompl0         : in  std_logic                     := 'X';             -- txcompl0
			txcompl1         : in  std_logic                     := 'X';             -- txcompl1
			txcompl2         : in  std_logic                     := 'X';             -- txcompl2
			txcompl3         : in  std_logic                     := 'X';             -- txcompl3
			txcompl4         : in  std_logic                     := 'X';             -- txcompl4
			txcompl5         : in  std_logic                     := 'X';             -- txcompl5
			txcompl6         : in  std_logic                     := 'X';             -- txcompl6
			txcompl7         : in  std_logic                     := 'X';             -- txcompl7
			txdata0          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- txdata0
			txdata1          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- txdata1
			txdata2          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- txdata2
			txdata3          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- txdata3
			txdata4          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- txdata4
			txdata5          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- txdata5
			txdata6          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- txdata6
			txdata7          : in  std_logic_vector(31 downto 0) := (others => 'X'); -- txdata7
			txdatak0         : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- txdatak0
			txdatak1         : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- txdatak1
			txdatak2         : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- txdatak2
			txdatak3         : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- txdatak3
			txdatak4         : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- txdatak4
			txdatak5         : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- txdatak5
			txdatak6         : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- txdatak6
			txdatak7         : in  std_logic_vector(3 downto 0)  := (others => 'X'); -- txdatak7
			txdetectrx0      : in  std_logic                     := 'X';             -- txdetectrx0
			txdetectrx1      : in  std_logic                     := 'X';             -- txdetectrx1
			txdetectrx2      : in  std_logic                     := 'X';             -- txdetectrx2
			txdetectrx3      : in  std_logic                     := 'X';             -- txdetectrx3
			txdetectrx4      : in  std_logic                     := 'X';             -- txdetectrx4
			txdetectrx5      : in  std_logic                     := 'X';             -- txdetectrx5
			txdetectrx6      : in  std_logic                     := 'X';             -- txdetectrx6
			txdetectrx7      : in  std_logic                     := 'X';             -- txdetectrx7
			txelecidle0      : in  std_logic                     := 'X';             -- txelecidle0
			txelecidle1      : in  std_logic                     := 'X';             -- txelecidle1
			txelecidle2      : in  std_logic                     := 'X';             -- txelecidle2
			txelecidle3      : in  std_logic                     := 'X';             -- txelecidle3
			txelecidle4      : in  std_logic                     := 'X';             -- txelecidle4
			txelecidle5      : in  std_logic                     := 'X';             -- txelecidle5
			txelecidle6      : in  std_logic                     := 'X';             -- txelecidle6
			txelecidle7      : in  std_logic                     := 'X';             -- txelecidle7
			txdeemph0        : in  std_logic                     := 'X';             -- txdeemph0
			txdeemph1        : in  std_logic                     := 'X';             -- txdeemph1
			txdeemph2        : in  std_logic                     := 'X';             -- txdeemph2
			txdeemph3        : in  std_logic                     := 'X';             -- txdeemph3
			txdeemph4        : in  std_logic                     := 'X';             -- txdeemph4
			txdeemph5        : in  std_logic                     := 'X';             -- txdeemph5
			txdeemph6        : in  std_logic                     := 'X';             -- txdeemph6
			txdeemph7        : in  std_logic                     := 'X';             -- txdeemph7
			txmargin0        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- txmargin0
			txmargin1        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- txmargin1
			txmargin2        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- txmargin2
			txmargin3        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- txmargin3
			txmargin4        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- txmargin4
			txmargin5        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- txmargin5
			txmargin6        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- txmargin6
			txmargin7        : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- txmargin7
			txswing0         : in  std_logic                     := 'X';             -- txswing0
			txswing1         : in  std_logic                     := 'X';             -- txswing1
			txswing2         : in  std_logic                     := 'X';             -- txswing2
			txswing3         : in  std_logic                     := 'X';             -- txswing3
			txswing4         : in  std_logic                     := 'X';             -- txswing4
			txswing5         : in  std_logic                     := 'X';             -- txswing5
			txswing6         : in  std_logic                     := 'X';             -- txswing6
			txswing7         : in  std_logic                     := 'X';             -- txswing7
			phystatus0       : out std_logic;                                        -- phystatus0
			phystatus1       : out std_logic;                                        -- phystatus1
			phystatus2       : out std_logic;                                        -- phystatus2
			phystatus3       : out std_logic;                                        -- phystatus3
			phystatus4       : out std_logic;                                        -- phystatus4
			phystatus5       : out std_logic;                                        -- phystatus5
			phystatus6       : out std_logic;                                        -- phystatus6
			phystatus7       : out std_logic;                                        -- phystatus7
			rxdata0          : out std_logic_vector(31 downto 0);                    -- rxdata0
			rxdata1          : out std_logic_vector(31 downto 0);                    -- rxdata1
			rxdata2          : out std_logic_vector(31 downto 0);                    -- rxdata2
			rxdata3          : out std_logic_vector(31 downto 0);                    -- rxdata3
			rxdata4          : out std_logic_vector(31 downto 0);                    -- rxdata4
			rxdata5          : out std_logic_vector(31 downto 0);                    -- rxdata5
			rxdata6          : out std_logic_vector(31 downto 0);                    -- rxdata6
			rxdata7          : out std_logic_vector(31 downto 0);                    -- rxdata7
			rxdatak0         : out std_logic_vector(3 downto 0);                     -- rxdatak0
			rxdatak1         : out std_logic_vector(3 downto 0);                     -- rxdatak1
			rxdatak2         : out std_logic_vector(3 downto 0);                     -- rxdatak2
			rxdatak3         : out std_logic_vector(3 downto 0);                     -- rxdatak3
			rxdatak4         : out std_logic_vector(3 downto 0);                     -- rxdatak4
			rxdatak5         : out std_logic_vector(3 downto 0);                     -- rxdatak5
			rxdatak6         : out std_logic_vector(3 downto 0);                     -- rxdatak6
			rxdatak7         : out std_logic_vector(3 downto 0);                     -- rxdatak7
			rxelecidle0      : out std_logic;                                        -- rxelecidle0
			rxelecidle1      : out std_logic;                                        -- rxelecidle1
			rxelecidle2      : out std_logic;                                        -- rxelecidle2
			rxelecidle3      : out std_logic;                                        -- rxelecidle3
			rxelecidle4      : out std_logic;                                        -- rxelecidle4
			rxelecidle5      : out std_logic;                                        -- rxelecidle5
			rxelecidle6      : out std_logic;                                        -- rxelecidle6
			rxelecidle7      : out std_logic;                                        -- rxelecidle7
			rxstatus0        : out std_logic_vector(2 downto 0);                     -- rxstatus0
			rxstatus1        : out std_logic_vector(2 downto 0);                     -- rxstatus1
			rxstatus2        : out std_logic_vector(2 downto 0);                     -- rxstatus2
			rxstatus3        : out std_logic_vector(2 downto 0);                     -- rxstatus3
			rxstatus4        : out std_logic_vector(2 downto 0);                     -- rxstatus4
			rxstatus5        : out std_logic_vector(2 downto 0);                     -- rxstatus5
			rxstatus6        : out std_logic_vector(2 downto 0);                     -- rxstatus6
			rxstatus7        : out std_logic_vector(2 downto 0);                     -- rxstatus7
			rxvalid0         : out std_logic;                                        -- rxvalid0
			rxvalid1         : out std_logic;                                        -- rxvalid1
			rxvalid2         : out std_logic;                                        -- rxvalid2
			rxvalid3         : out std_logic;                                        -- rxvalid3
			rxvalid4         : out std_logic;                                        -- rxvalid4
			rxvalid5         : out std_logic;                                        -- rxvalid5
			rxvalid6         : out std_logic;                                        -- rxvalid6
			rxvalid7         : out std_logic;                                        -- rxvalid7
			rxdataskip0      : out std_logic;                                        -- rxdataskip0
			rxdataskip1      : out std_logic;                                        -- rxdataskip1
			rxdataskip2      : out std_logic;                                        -- rxdataskip2
			rxdataskip3      : out std_logic;                                        -- rxdataskip3
			rxdataskip4      : out std_logic;                                        -- rxdataskip4
			rxdataskip5      : out std_logic;                                        -- rxdataskip5
			rxdataskip6      : out std_logic;                                        -- rxdataskip6
			rxdataskip7      : out std_logic;                                        -- rxdataskip7
			rxblkst0         : out std_logic;                                        -- rxblkst0
			rxblkst1         : out std_logic;                                        -- rxblkst1
			rxblkst2         : out std_logic;                                        -- rxblkst2
			rxblkst3         : out std_logic;                                        -- rxblkst3
			rxblkst4         : out std_logic;                                        -- rxblkst4
			rxblkst5         : out std_logic;                                        -- rxblkst5
			rxblkst6         : out std_logic;                                        -- rxblkst6
			rxblkst7         : out std_logic;                                        -- rxblkst7
			rxsynchd0        : out std_logic_vector(1 downto 0);                     -- rxsynchd0
			rxsynchd1        : out std_logic_vector(1 downto 0);                     -- rxsynchd1
			rxsynchd2        : out std_logic_vector(1 downto 0);                     -- rxsynchd2
			rxsynchd3        : out std_logic_vector(1 downto 0);                     -- rxsynchd3
			rxsynchd4        : out std_logic_vector(1 downto 0);                     -- rxsynchd4
			rxsynchd5        : out std_logic_vector(1 downto 0);                     -- rxsynchd5
			rxsynchd6        : out std_logic_vector(1 downto 0);                     -- rxsynchd6
			rxsynchd7        : out std_logic_vector(1 downto 0);                     -- rxsynchd7
			currentcoeff0    : in  std_logic_vector(17 downto 0) := (others => 'X'); -- currentcoeff0
			currentcoeff1    : in  std_logic_vector(17 downto 0) := (others => 'X'); -- currentcoeff1
			currentcoeff2    : in  std_logic_vector(17 downto 0) := (others => 'X'); -- currentcoeff2
			currentcoeff3    : in  std_logic_vector(17 downto 0) := (others => 'X'); -- currentcoeff3
			currentcoeff4    : in  std_logic_vector(17 downto 0) := (others => 'X'); -- currentcoeff4
			currentcoeff5    : in  std_logic_vector(17 downto 0) := (others => 'X'); -- currentcoeff5
			currentcoeff6    : in  std_logic_vector(17 downto 0) := (others => 'X'); -- currentcoeff6
			currentcoeff7    : in  std_logic_vector(17 downto 0) := (others => 'X'); -- currentcoeff7
			currentrxpreset0 : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- currentrxpreset0
			currentrxpreset1 : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- currentrxpreset1
			currentrxpreset2 : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- currentrxpreset2
			currentrxpreset3 : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- currentrxpreset3
			currentrxpreset4 : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- currentrxpreset4
			currentrxpreset5 : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- currentrxpreset5
			currentrxpreset6 : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- currentrxpreset6
			currentrxpreset7 : in  std_logic_vector(2 downto 0)  := (others => 'X'); -- currentrxpreset7
			txsynchd0        : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- txsynchd0
			txsynchd1        : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- txsynchd1
			txsynchd2        : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- txsynchd2
			txsynchd3        : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- txsynchd3
			txsynchd4        : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- txsynchd4
			txsynchd5        : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- txsynchd5
			txsynchd6        : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- txsynchd6
			txsynchd7        : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- txsynchd7
			txblkst0         : in  std_logic                     := 'X';             -- txblkst0
			txblkst1         : in  std_logic                     := 'X';             -- txblkst1
			txblkst2         : in  std_logic                     := 'X';             -- txblkst2
			txblkst3         : in  std_logic                     := 'X';             -- txblkst3
			txblkst4         : in  std_logic                     := 'X';             -- txblkst4
			txblkst5         : in  std_logic                     := 'X';             -- txblkst5
			txblkst6         : in  std_logic                     := 'X';             -- txblkst6
			txblkst7         : in  std_logic                     := 'X';             -- txblkst7
			txdataskip0      : in  std_logic                     := 'X';             -- txdataskip0
			txdataskip1      : in  std_logic                     := 'X';             -- txdataskip1
			txdataskip2      : in  std_logic                     := 'X';             -- txdataskip2
			txdataskip3      : in  std_logic                     := 'X';             -- txdataskip3
			txdataskip4      : in  std_logic                     := 'X';             -- txdataskip4
			txdataskip5      : in  std_logic                     := 'X';             -- txdataskip5
			txdataskip6      : in  std_logic                     := 'X';             -- txdataskip6
			txdataskip7      : in  std_logic                     := 'X';             -- txdataskip7
			rate0            : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- rate0
			rate1            : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- rate1
			rate2            : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- rate2
			rate3            : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- rate3
			rate4            : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- rate4
			rate5            : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- rate5
			rate6            : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- rate6
			rate7            : in  std_logic_vector(1 downto 0)  := (others => 'X'); -- rate7
			rx_in0           : out std_logic;                                        -- rx_in0
			rx_in1           : out std_logic;                                        -- rx_in1
			rx_in2           : out std_logic;                                        -- rx_in2
			rx_in3           : out std_logic;                                        -- rx_in3
			rx_in4           : out std_logic;                                        -- rx_in4
			rx_in5           : out std_logic;                                        -- rx_in5
			rx_in6           : out std_logic;                                        -- rx_in6
			rx_in7           : out std_logic;                                        -- rx_in7
			tx_out0          : in  std_logic                     := 'X';             -- tx_out0
			tx_out1          : in  std_logic                     := 'X';             -- tx_out1
			tx_out2          : in  std_logic                     := 'X';             -- tx_out2
			tx_out3          : in  std_logic                     := 'X';             -- tx_out3
			tx_out4          : in  std_logic                     := 'X';             -- tx_out4
			tx_out5          : in  std_logic                     := 'X';             -- tx_out5
			tx_out6          : in  std_logic                     := 'X';             -- tx_out6
			tx_out7          : in  std_logic                     := 'X';             -- tx_out7
			npor             : out std_logic;                                        -- npor
			pin_perst        : out std_logic;                                        -- pin_perst
			refclk           : out std_logic                                         -- clk
		);
	end component DUT_pcie_tb_ip;

