<?xml version="1.0" ?>
<spirit:component xmlns:altera="http://www.altera.com/XMLSchema/IPXact/extensions" xmlns:spirit="http://www.spiritconsortium.org/XMLSchema/SPIRIT/1685-2009">
  <spirit:vendor>Intel Corporation</spirit:vendor>
  <spirit:library>XG_inst_csr_bfm_ip</spirit:library>
  <spirit:name>XG_inst_csr_bfm</spirit:name>
  <spirit:version>17.1</spirit:version>
  <spirit:busInterfaces>
    <spirit:busInterface>
      <spirit:name>clk</spirit:name>
      <spirit:busType spirit:vendor="altera" spirit:library="altera" spirit:name="clock" spirit:version="17.1"></spirit:busType>
      <spirit:slave></spirit:slave>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>clk</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>clk</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>clockRate</spirit:name>
          <spirit:displayName>Clock rate</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="clockRate">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>externallyDriven</spirit:name>
          <spirit:displayName>Externally driven</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="externallyDriven">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ptfSchematicName</spirit:name>
          <spirit:displayName>PTF schematic name</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="ptfSchematicName"></spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>clk_reset</spirit:name>
      <spirit:busType spirit:vendor="altera" spirit:library="altera" spirit:name="reset" spirit:version="17.1"></spirit:busType>
      <spirit:slave></spirit:slave>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>reset</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>reset</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>associatedClock</spirit:name>
          <spirit:displayName>Associated clock</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="associatedClock">clk</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>synchronousEdges</spirit:name>
          <spirit:displayName>Synchronous edges</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="synchronousEdges">DEASSERT</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
    <spirit:busInterface>
      <spirit:name>m0</spirit:name>
      <spirit:busType spirit:vendor="altera" spirit:library="altera" spirit:name="avalon" spirit:version="17.1"></spirit:busType>
      <spirit:master></spirit:master>
      <spirit:portMaps>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>address</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>avm_address</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>readdata</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>avm_readdata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>writedata</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>avm_writedata</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>waitrequest</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>avm_waitrequest</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>write</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>avm_write</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
        <spirit:portMap>
          <spirit:logicalPort>
            <spirit:name>read</spirit:name>
          </spirit:logicalPort>
          <spirit:physicalPort>
            <spirit:name>avm_read</spirit:name>
          </spirit:physicalPort>
        </spirit:portMap>
      </spirit:portMaps>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>adaptsTo</spirit:name>
          <spirit:displayName>Adapts to</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="adaptsTo"></spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>addressGroup</spirit:name>
          <spirit:displayName>Address group</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="addressGroup">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>addressUnits</spirit:name>
          <spirit:displayName>Address units</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="addressUnits">WORDS</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>alwaysBurstMaxBurst</spirit:name>
          <spirit:displayName>Always burst maximum burst</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="alwaysBurstMaxBurst">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>associatedClock</spirit:name>
          <spirit:displayName>Associated clock</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="associatedClock">clk</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>associatedReset</spirit:name>
          <spirit:displayName>Associated reset</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="associatedReset">clk_reset</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>bitsPerSymbol</spirit:name>
          <spirit:displayName>Bits per symbol</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="bitsPerSymbol">8</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>burstOnBurstBoundariesOnly</spirit:name>
          <spirit:displayName>Burst on burst boundaries only</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="burstOnBurstBoundariesOnly">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>burstcountUnits</spirit:name>
          <spirit:displayName>Burstcount units</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="burstcountUnits">WORDS</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>constantBurstBehavior</spirit:name>
          <spirit:displayName>Constant burst behavior</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="constantBurstBehavior">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>dBSBigEndian</spirit:name>
          <spirit:displayName>dBS big endian</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="dBSBigEndian">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>doStreamReads</spirit:name>
          <spirit:displayName>Use flow control for read transfers</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="doStreamReads">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>doStreamWrites</spirit:name>
          <spirit:displayName>Use flow control for write transfers</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="doStreamWrites">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>holdTime</spirit:name>
          <spirit:displayName>Hold</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="holdTime">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>interleaveBursts</spirit:name>
          <spirit:displayName>Interleave bursts</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="interleaveBursts">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isAsynchronous</spirit:name>
          <spirit:displayName>Is asynchronous</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isAsynchronous">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isBigEndian</spirit:name>
          <spirit:displayName>Is big endian</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isBigEndian">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isReadable</spirit:name>
          <spirit:displayName>Is readable</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isReadable">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>isWriteable</spirit:name>
          <spirit:displayName>Is writeable</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="isWriteable">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>linewrapBursts</spirit:name>
          <spirit:displayName>Linewrap bursts</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="linewrapBursts">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>maxAddressWidth</spirit:name>
          <spirit:displayName>Maximum address width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="maxAddressWidth">32</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>maximumPendingReadTransactions</spirit:name>
          <spirit:displayName>Maximum pending read transactions</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="maximumPendingReadTransactions">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>maximumPendingWriteTransactions</spirit:name>
          <spirit:displayName>Maximum pending write transactions</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="maximumPendingWriteTransactions">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>minimumReadLatency</spirit:name>
          <spirit:displayName>minimumReadLatency</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="minimumReadLatency">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>minimumResponseLatency</spirit:name>
          <spirit:displayName>Minimum response latency</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="minimumResponseLatency">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>prSafe</spirit:name>
          <spirit:displayName>Partial Reconfiguration Safe</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="prSafe">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>readLatency</spirit:name>
          <spirit:displayName>Read latency</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="readLatency">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>readWaitTime</spirit:name>
          <spirit:displayName>Read wait</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="readWaitTime">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>registerIncomingSignals</spirit:name>
          <spirit:displayName>Register incoming signals</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="registerIncomingSignals">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>registerOutgoingSignals</spirit:name>
          <spirit:displayName>Register outgoing signals</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="registerOutgoingSignals">false</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>setupTime</spirit:name>
          <spirit:displayName>Setup</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="setupTime">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>timingUnits</spirit:name>
          <spirit:displayName>Timing units</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="timingUnits">Cycles</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>waitrequestAllowance</spirit:name>
          <spirit:displayName>Waitrequest allowance</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="waitrequestAllowance">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>writeWaitTime</spirit:name>
          <spirit:displayName>Write wait</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="writeWaitTime">0</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </spirit:busInterface>
  </spirit:busInterfaces>
  <spirit:model>
    <spirit:views>
      <spirit:view>
        <spirit:name>QUARTUS_SYNTH</spirit:name>
        <spirit:envIdentifier>:quartus.altera.com:</spirit:envIdentifier>
        <spirit:modelName>altera_avalon_mm_master_bfm</spirit:modelName>
        <spirit:fileSetRef>
          <spirit:localName>QUARTUS_SYNTH</spirit:localName>
        </spirit:fileSetRef>
      </spirit:view>
    </spirit:views>
    <spirit:ports>
      <spirit:port>
        <spirit:name>clk</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>reset</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>avm_address</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>9</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>avm_readdata</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>avm_writedata</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:vector>
            <spirit:left>0</spirit:left>
            <spirit:right>31</spirit:right>
          </spirit:vector>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC_VECTOR</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>avm_waitrequest</spirit:name>
        <spirit:wire>
          <spirit:direction>in</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>avm_write</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
      <spirit:port>
        <spirit:name>avm_read</spirit:name>
        <spirit:wire>
          <spirit:direction>out</spirit:direction>
          <spirit:wireTypeDefs>
            <spirit:wireTypeDef>
              <spirit:typeName>STD_LOGIC</spirit:typeName>
              <spirit:viewNameRef>QUARTUS_SYNTH</spirit:viewNameRef>
            </spirit:wireTypeDef>
          </spirit:wireTypeDefs>
        </spirit:wire>
      </spirit:port>
    </spirit:ports>
  </spirit:model>
  <spirit:vendorExtensions>
    <altera:entity_info>
      <spirit:vendor>Intel Corporation</spirit:vendor>
      <spirit:library>XG_inst_csr_bfm_ip</spirit:library>
      <spirit:name>altera_avalon_mm_master_bfm</spirit:name>
      <spirit:version>17.1</spirit:version>
    </altera:entity_info>
    <altera:altera_module_parameters>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>AV_ADDRESS_W</spirit:name>
          <spirit:displayName>Address width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_ADDRESS_W">10</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_SYMBOL_W</spirit:name>
          <spirit:displayName>Symbol width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_SYMBOL_W">8</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_NUMSYMBOLS</spirit:name>
          <spirit:displayName>Number of Symbols</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_NUMSYMBOLS">4</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_BURSTCOUNT_W</spirit:name>
          <spirit:displayName>Burstcount width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_BURSTCOUNT_W">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_READRESPONSE_W</spirit:name>
          <spirit:displayName>Read Response width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_READRESPONSE_W">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_WRITERESPONSE_W</spirit:name>
          <spirit:displayName>Write Response width</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_WRITERESPONSE_W">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_READ</spirit:name>
          <spirit:displayName>Use the read signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_READ">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_WRITE</spirit:name>
          <spirit:displayName>Use the write signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_WRITE">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_ADDRESS</spirit:name>
          <spirit:displayName>Use the address signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_ADDRESS">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_BYTE_ENABLE</spirit:name>
          <spirit:displayName>Use the byteenable signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_BYTE_ENABLE">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_BURSTCOUNT</spirit:name>
          <spirit:displayName>Use the burstcount signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_BURSTCOUNT">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_READ_DATA</spirit:name>
          <spirit:displayName>Use the readdata signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_READ_DATA">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_READ_DATA_VALID</spirit:name>
          <spirit:displayName>Use the readdatavalid signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_READ_DATA_VALID">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_WRITE_DATA</spirit:name>
          <spirit:displayName>Use the writedata signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_WRITE_DATA">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_BEGIN_TRANSFER</spirit:name>
          <spirit:displayName>Use the begintransfer signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_BEGIN_TRANSFER">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_BEGIN_BURST_TRANSFER</spirit:name>
          <spirit:displayName>Use beginbursttransfer signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_BEGIN_BURST_TRANSFER">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_ARBITERLOCK</spirit:name>
          <spirit:displayName>Use the arbiterlock signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_ARBITERLOCK">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_LOCK</spirit:name>
          <spirit:displayName>Use the lock signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_LOCK">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_DEBUGACCESS</spirit:name>
          <spirit:displayName>Use the debugaccess signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_DEBUGACCESS">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_WAIT_REQUEST</spirit:name>
          <spirit:displayName>Use the waitrequest signal</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_WAIT_REQUEST">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_TRANSACTIONID</spirit:name>
          <spirit:displayName>Use the transaction id signals</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_TRANSACTIONID">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_WRITERESPONSE</spirit:name>
          <spirit:displayName>Use the write response signals</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_WRITERESPONSE">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_READRESPONSE</spirit:name>
          <spirit:displayName>Use the read response signals</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_READRESPONSE">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>USE_CLKEN</spirit:name>
          <spirit:displayName>Use the clken signals</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="USE_CLKEN">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSERT_HIGH_RESET</spirit:name>
          <spirit:displayName>Assert reset high</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="ASSERT_HIGH_RESET">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSERT_HIGH_WAITREQUEST</spirit:name>
          <spirit:displayName>Assert waitrequest high</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="ASSERT_HIGH_WAITREQUEST">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSERT_HIGH_READ</spirit:name>
          <spirit:displayName>Assert read high</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="ASSERT_HIGH_READ">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSERT_HIGH_WRITE</spirit:name>
          <spirit:displayName>Assert write high</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="ASSERT_HIGH_WRITE">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSERT_HIGH_BYTEENABLE</spirit:name>
          <spirit:displayName>Assert byteenable high</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="ASSERT_HIGH_BYTEENABLE">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSERT_HIGH_READDATAVALID</spirit:name>
          <spirit:displayName>Assert readdatavalid high</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="ASSERT_HIGH_READDATAVALID">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSERT_HIGH_ARBITERLOCK</spirit:name>
          <spirit:displayName>Assert arbiterlock high</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="ASSERT_HIGH_ARBITERLOCK">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ASSERT_HIGH_LOCK</spirit:name>
          <spirit:displayName>Assert lock high</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="ASSERT_HIGH_LOCK">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_CONSTANT_BURST_BEHAVIOR</spirit:name>
          <spirit:displayName>Constant burst behavior</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_CONSTANT_BURST_BEHAVIOR">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_BURST_LINEWRAP</spirit:name>
          <spirit:displayName>Linewrap bursts</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_BURST_LINEWRAP">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_BURST_BNDR_ONLY</spirit:name>
          <spirit:displayName>Burst on Burst Boundaries only</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_BURST_BNDR_ONLY">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_ALWAYS_BURST_MAX_BURST</spirit:name>
          <spirit:displayName>Always Burst Max burst</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_ALWAYS_BURST_MAX_BURST">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_MAX_PENDING_READS</spirit:name>
          <spirit:displayName>Maximum pending reads</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_MAX_PENDING_READS">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_MAX_PENDING_WRITES</spirit:name>
          <spirit:displayName>Maximum pending writes</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_MAX_PENDING_WRITES">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_FIX_READ_LATENCY</spirit:name>
          <spirit:displayName>Fixed read latency (cycles)</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_FIX_READ_LATENCY">1</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_READ_WAIT_TIME</spirit:name>
          <spirit:displayName>Fixed read wait time (cycles)</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_READ_WAIT_TIME">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_WRITE_WAIT_TIME</spirit:name>
          <spirit:displayName>Fixed write wait time (cycles)</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_WRITE_WAIT_TIME">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_WAITREQUEST_ALLOWANCE</spirit:name>
          <spirit:displayName>Waitrequest allowance</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_WAITREQUEST_ALLOWANCE">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>REGISTER_WAITREQUEST</spirit:name>
          <spirit:displayName>Registered waitrequest</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="REGISTER_WAITREQUEST">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>AV_REGISTERINCOMINGSIGNALS</spirit:name>
          <spirit:displayName>Registered Incoming Signals</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="AV_REGISTERINCOMINGSIGNALS">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>ADDRESS_UNITS</spirit:name>
          <spirit:displayName>Set master interface address type to symbols or words</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="ADDRESS_UNITS">WORDS</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>VHDL_ID</spirit:name>
          <spirit:displayName>VHDL BFM ID</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="VHDL_ID">0</spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </altera:altera_module_parameters>
    <altera:altera_system_parameters>
      <spirit:parameters>
        <spirit:parameter>
          <spirit:name>device</spirit:name>
          <spirit:displayName>Device</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="device">10AT115S2F45E2SG</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>deviceFamily</spirit:name>
          <spirit:displayName>Device family</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="deviceFamily">Arria 10</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>deviceSpeedGrade</spirit:name>
          <spirit:displayName>Device Speed Grade</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="deviceSpeedGrade">2</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>generationId</spirit:name>
          <spirit:displayName>Generation Id</spirit:displayName>
          <spirit:value spirit:format="long" spirit:id="generationId">0</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>bonusData</spirit:name>
          <spirit:displayName>bonusData</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="bonusData">bonusData 
{
   element XG_inst_csr_bfm
   {
      datum _sortIndex
      {
         value = "0";
         type = "int";
      }
   }
}
</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>hideFromIPCatalog</spirit:name>
          <spirit:displayName>Hide from IP Catalog</spirit:displayName>
          <spirit:value spirit:format="bool" spirit:id="hideFromIPCatalog">true</spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>lockedInterfaceDefinition</spirit:name>
          <spirit:displayName>lockedInterfaceDefinition</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="lockedInterfaceDefinition"><![CDATA[<boundaryDefinition>
    <interfaces>
        <interface>
            <name>clk</name>
            <type>clock</type>
            <isStart>false</isStart>
            <ports>
                <port>
                    <name>clk</name>
                    <role>clk</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
            </ports>
            <assignments>
                <assignmentValueMap/>
            </assignments>
            <parameters>
                <parameterValueMap>
                    <entry>
                        <key>clockRate</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>externallyDriven</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>ptfSchematicName</key>
                    </entry>
                </parameterValueMap>
            </parameters>
        </interface>
        <interface>
            <name>clk_reset</name>
            <type>reset</type>
            <isStart>false</isStart>
            <ports>
                <port>
                    <name>reset</name>
                    <role>reset</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
            </ports>
            <assignments>
                <assignmentValueMap/>
            </assignments>
            <parameters>
                <parameterValueMap>
                    <entry>
                        <key>associatedClock</key>
                        <value>clk</value>
                    </entry>
                    <entry>
                        <key>synchronousEdges</key>
                        <value>DEASSERT</value>
                    </entry>
                </parameterValueMap>
            </parameters>
        </interface>
        <interface>
            <name>m0</name>
            <type>avalon</type>
            <isStart>true</isStart>
            <ports>
                <port>
                    <name>avm_address</name>
                    <role>address</role>
                    <direction>Output</direction>
                    <width>10</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>avm_readdata</name>
                    <role>readdata</role>
                    <direction>Input</direction>
                    <width>32</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>avm_writedata</name>
                    <role>writedata</role>
                    <direction>Output</direction>
                    <width>32</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC_VECTOR</vhdlType>
                </port>
                <port>
                    <name>avm_waitrequest</name>
                    <role>waitrequest</role>
                    <direction>Input</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>avm_write</name>
                    <role>write</role>
                    <direction>Output</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
                <port>
                    <name>avm_read</name>
                    <role>read</role>
                    <direction>Output</direction>
                    <width>1</width>
                    <lowerBound>0</lowerBound>
                    <vhdlType>STD_LOGIC</vhdlType>
                </port>
            </ports>
            <assignments>
                <assignmentValueMap/>
            </assignments>
            <parameters>
                <parameterValueMap>
                    <entry>
                        <key>adaptsTo</key>
                    </entry>
                    <entry>
                        <key>addressGroup</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>addressUnits</key>
                        <value>WORDS</value>
                    </entry>
                    <entry>
                        <key>alwaysBurstMaxBurst</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>associatedClock</key>
                        <value>clk</value>
                    </entry>
                    <entry>
                        <key>associatedReset</key>
                        <value>clk_reset</value>
                    </entry>
                    <entry>
                        <key>bitsPerSymbol</key>
                        <value>8</value>
                    </entry>
                    <entry>
                        <key>burstOnBurstBoundariesOnly</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>burstcountUnits</key>
                        <value>WORDS</value>
                    </entry>
                    <entry>
                        <key>constantBurstBehavior</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>dBSBigEndian</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>doStreamReads</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>doStreamWrites</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>holdTime</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>interleaveBursts</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isAsynchronous</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isBigEndian</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isReadable</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>isWriteable</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>linewrapBursts</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>maxAddressWidth</key>
                        <value>32</value>
                    </entry>
                    <entry>
                        <key>maximumPendingReadTransactions</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>maximumPendingWriteTransactions</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>minimumReadLatency</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>minimumResponseLatency</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>prSafe</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>readLatency</key>
                        <value>1</value>
                    </entry>
                    <entry>
                        <key>readWaitTime</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>registerIncomingSignals</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>registerOutgoingSignals</key>
                        <value>false</value>
                    </entry>
                    <entry>
                        <key>setupTime</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>timingUnits</key>
                        <value>Cycles</value>
                    </entry>
                    <entry>
                        <key>waitrequestAllowance</key>
                        <value>0</value>
                    </entry>
                    <entry>
                        <key>writeWaitTime</key>
                        <value>0</value>
                    </entry>
                </parameterValueMap>
            </parameters>
        </interface>
    </interfaces>
</boundaryDefinition>]]></spirit:value>
        </spirit:parameter>
        <spirit:parameter>
          <spirit:name>systemInfos</spirit:name>
          <spirit:displayName>systemInfos</spirit:displayName>
          <spirit:value spirit:format="string" spirit:id="systemInfos"><![CDATA[<systemInfosDefinition>
    <connPtSystemInfos/>
</systemInfosDefinition>]]></spirit:value>
        </spirit:parameter>
      </spirit:parameters>
    </altera:altera_system_parameters>
    <altera:altera_interface_boundary>
      <altera:interface_mapping altera:name="clk" altera:internal="XG_inst_csr_bfm.clk" altera:type="clock" altera:dir="end">
        <altera:port_mapping altera:name="clk" altera:internal="clk"></altera:port_mapping>
      </altera:interface_mapping>
      <altera:interface_mapping altera:name="clk_reset" altera:internal="XG_inst_csr_bfm.clk_reset" altera:type="reset" altera:dir="end">
        <altera:port_mapping altera:name="reset" altera:internal="reset"></altera:port_mapping>
      </altera:interface_mapping>
      <altera:interface_mapping altera:name="m0" altera:internal="XG_inst_csr_bfm.m0" altera:type="avalon" altera:dir="start">
        <altera:port_mapping altera:name="avm_address" altera:internal="avm_address"></altera:port_mapping>
        <altera:port_mapping altera:name="avm_read" altera:internal="avm_read"></altera:port_mapping>
        <altera:port_mapping altera:name="avm_readdata" altera:internal="avm_readdata"></altera:port_mapping>
        <altera:port_mapping altera:name="avm_waitrequest" altera:internal="avm_waitrequest"></altera:port_mapping>
        <altera:port_mapping altera:name="avm_write" altera:internal="avm_write"></altera:port_mapping>
        <altera:port_mapping altera:name="avm_writedata" altera:internal="avm_writedata"></altera:port_mapping>
      </altera:interface_mapping>
    </altera:altera_interface_boundary>
    <altera:altera_has_warnings>false</altera:altera_has_warnings>
    <altera:altera_has_errors>false</altera:altera_has_errors>
  </spirit:vendorExtensions>
</spirit:component>